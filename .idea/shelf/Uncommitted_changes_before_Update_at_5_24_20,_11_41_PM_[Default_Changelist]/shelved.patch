Index: WebInterface/src/components/Home/Search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component, useState} from 'react'\nimport {Link} from 'react-router-dom';\nimport './Search.css'\nimport Silogo from '../../silogo.png'\nimport Result from \"../Result/Result\";\nimport Route from \"react-router-dom/es/Route\";\n//import lib from 'react-speech-recognition';\n//import Mic from './Mic'\nimport countries from \"../../countries\";\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      suggestions: []\n    }\n  }\n\n  handleChange = (e) => {\n    const {items} = this.props;\n    const query = e.target.value;\n    let suggestions = [];\n    if (query.length > 0) {\n      const regex = new RegExp(`^${query}`, `i`);\n      suggestions = items.sort().filter(v => regex.test(v));\n    }\n    this.setState(() => ({suggestions, query: query}));\n  }\n  suggestionSelected = (query) => {\n    this.setState(() => ({query: query, suggestions: []}));\n  }\n\n  renderSuggestions() {\n    const {suggestions} = this.state\n    if (suggestions.length === 0) {\n      return null\n    }\n    return (\n        <ul>\n          {suggestions.map(item => {\n            return (<li onClick={() => this.suggestionSelected(item)}>{item}</li>)\n          })}\n        </ul>\n    )\n  }\n\n  render() {\n    const {query} = this.state;\n    const country = this.props.country;\n    console.log(country);\n    console.log(query);\n\n    return (\n        <div className=\"container\">\n\n          <div className=\"AutoCompleteText\">\n            <input onChange={this.handleChange} value={query} type=\"text\"\n                   class=\"form-control form-control-sm ml-3 w-100\" id=\"search-input\" placeholder=\"Search...\"/>\n            <div>{this.renderSuggestions()}</div>\n          </div>\n          <div className=\"center\">\n            <Link to={{\n              pathname: \"/results/1\",\n              state: {\n                searchQuery: query,\n                country: country\n              }\n               }} className=\"myButton\">Go</Link>\n            <Route path=\"/results/1\"  render={ props => (\n                <Result {...props}/>\n            )} />\n            <Link to=\"/searchbyvoice\" className=\"myButton\">Voice Search</Link>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Search
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- WebInterface/src/components/Home/Search.js	(revision a058a7cda9e48c564081d5231408a92aa7a85473)
+++ WebInterface/src/components/Home/Search.js	(date 1590356322881)
@@ -7,6 +7,9 @@
 //import lib from 'react-speech-recognition';
 //import Mic from './Mic'
 import countries from "../../countries";
+import Mic from "../Mic/Mic";
+import Voice from "./mic-fill.svg";
+
 
 
 class Search extends Component {
@@ -18,9 +21,11 @@
     }
   }
 
-  handleChange = (e) => {
+  handleChange = (e, v) => {
     const {items} = this.props;
-    const query = e.target.value;
+    let query;
+    if(e) query = e.target.value;
+    else query = v;
     let suggestions = [];
     if (query.length > 0) {
       const regex = new RegExp(`^${query}`, `i`);
@@ -46,21 +51,59 @@
     )
   }
 
+
   render() {
-    const {query} = this.state;
+    let {query} = this.state;
     const country = this.props.country;
+    let trnscrpt = "";
     console.log(country);
     console.log(query);
 
+
+      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
+      const SpeechGrammarList = window.SpeechGrammarList || window.webkitSpeechGrammarList;
+
+      const grammar = '#JSGF V1.0;';
+
+      const recognition = new SpeechRecognition();
+      const speechRecognitionList = new SpeechGrammarList();
+      speechRecognitionList.addFromString(grammar, 1);
+      recognition.grammars = speechRecognitionList;
+      recognition.lang = 'en-US';
+      recognition.interimResults = false;
+
+    recognition.onerror = (event) =>{
+      alert("Erorr! "+event.error);
+    }
+
+    recognition.onspeechend = () => {
+      recognition.stop();
+    };
+
+    recognition.onresult = (event) => {
+      const last = event.results.length - 1;
+      const command = event.results[last][0].transcript;
+      console.log(command);
+      query = command;
+      document.getElementById("search-input").value = query;
+      this.handleChange(null, command);
+    };
+
+
+
     return (
-        <div className="container">
-
+        <div className="container" >
           <div className="AutoCompleteText">
             <input onChange={this.handleChange} value={query} type="text"
-                   class="form-control form-control-sm ml-3 w-100" id="search-input" placeholder="Search..."/>
+                   className="form-control form-control-sm ml-3 w-100" id="search-input" placeholder="Search..."/>
             <div>{this.renderSuggestions()}</div>
           </div>
-          <div className="center">
+          <div className="center flex-container" style={{
+              display: "flex",
+              flexWrap: "wrap",
+            justifyContent: "space-between",
+            alignItems: "center"
+          }}>
             <Link to={{
               pathname: "/results/1",
               state: {
@@ -71,7 +114,18 @@
             <Route path="/results/1"  render={ props => (
                 <Result {...props}/>
             )} />
-            <Link to="/searchbyvoice" className="myButton">Voice Search</Link>
+            {/*<Link to="/voice" className="myButton">Voice Search</Link>*/}
+            <img src={Voice} id="voiceRecognition" className="img-responsive center-block"
+                 alt="Voice Recognition"  onClick={ event => {recognition.start(); }}
+                 style={{
+                   minHeight: "50px",
+                   minWidth: "50px",
+                   height: "15%",
+                   width: "15%",
+                   marginTop: "5%",
+                   position: "relative",
+                   alignSelf: "center"
+                 }}/>
           </div>
         </div>
     )
Index: WebInterface/src/components/Result/Result.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\n// import axios from 'axios'\nimport {useState, useEffect} from 'react'\nimport Results from './Results'\nimport Pagination from './Pagination'\nimport  axios  from '../../axios-instance'\nconst Result = props =>{\n    const [posts,setPosts] = useState([]);\n    const [loading,setLoading] = useState(false);\n    const[currentPage,setCurrentPage]=useState(1)\n    const [postsPerPage] = useState(10);\n\n    if(props.location.state) {\n        localStorage.setItem('searchQuery',  props.location.state.searchQuery);\n        localStorage.setItem('country',  props.location.state.country);\n    }\n    const searchQuery = localStorage.getItem('searchQuery');\n    const country = localStorage.getItem('country');\n\n    console.log(searchQuery, country);\n\n    let data = {\n        searchQuery1: searchQuery,\n        Country: country\n    }\n\n    console.log(data);\n    let _data = JSON.stringify(data);\n\n\n    useEffect(() => {\n        const fetchPosts =  () =>{\n\n            setLoading(true);\n\n            axios.post('/results', _data).then(r => {\n                    console.log(r);\n                    setPosts(r.data);\n                    setLoading(false);\n                }).catch(error => {\n                    console.error(error);\n                });\n        };\n        fetchPosts();\n    }, []);\n\n    // Get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n    window.history.pushState(null, null, '/results/'+currentPage);\n    console.log(currentPosts.length);\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n    return(\n\n        <div>\n            <h4 className=\"text mb-3\"  style={{marginLeft: '2%', marginTop: '1%', marginBottom: '1%'}}>Search Results</h4>\n            <Results posts={currentPosts} loading={loading} />\n            {/*<Pagination count={posts.length} color=\"secondary\" />*/}\n            <Pagination style={{marginBottom: '2%', float: 'bottom'}}\n                postsPerPage={postsPerPage}\n                totalPosts={posts.length}\n                paginate={paginate}\n                currentPage={currentPage}\n            />\n        </div>\n\n    )\n}\nexport default Result
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- WebInterface/src/components/Result/Result.js	(revision a058a7cda9e48c564081d5231408a92aa7a85473)
+++ WebInterface/src/components/Result/Result.js	(date 1590312589303)
@@ -1,5 +1,4 @@
 import React from 'react'
-// import axios from 'axios'
 import {useState, useEffect} from 'react'
 import Results from './Results'
 import Pagination from './Pagination'
@@ -56,7 +55,6 @@
         <div>
             <h4 className="text mb-3"  style={{marginLeft: '2%', marginTop: '1%', marginBottom: '1%'}}>Search Results</h4>
             <Results posts={currentPosts} loading={loading} />
-            {/*<Pagination count={posts.length} color="secondary" />*/}
             <Pagination style={{marginBottom: '2%', float: 'bottom'}}
                 postsPerPage={postsPerPage}
                 totalPosts={posts.length}
Index: WebInterface/src/components/Mic/Mic.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component } from 'react'\nimport SpeechRecognition from 'react-speech-recognition'\nimport './Mic.css'\n\nclass Mic extends Component {\n  render() {\n    const { transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n\n    return (\n      <div className=\"container\">\n        <button class=\"myButton\"onClick={resetTranscript}>Reset</button>\n    <div className=\"contentmic\"><span>{transcript}</span></div>      \n      </div>\n    )\n  }\n}\n\nexport default SpeechRecognition(Mic)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- WebInterface/src/components/Mic/Mic.js	(revision a058a7cda9e48c564081d5231408a92aa7a85473)
+++ WebInterface/src/components/Mic/Mic.js	(date 1590313906890)
@@ -1,22 +1,32 @@
-import React, {Component } from 'react'
-import SpeechRecognition from 'react-speech-recognition'
-import './Mic.css'
+import React, { Component } from "react";
+import PropTypes from "prop-types";
+import SpeechRecognition from "react-speech-recognition";
 
-class Mic extends Component {
-  render() {
-    const { transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props
+const propTypes = {
+  // Props injected by SpeechRecognition
+  transcript: PropTypes.string,
+  resetTranscript: PropTypes.func,
+  browserSupportsSpeechRecognition: PropTypes.bool
+};
 
-    if (!browserSupportsSpeechRecognition) {
-      return null
-    }
+const Dictaphone = ({
+                      transcript,
+                      resetTranscript,
+                      browserSupportsSpeechRecognition
+                    }) => {
+  if (!browserSupportsSpeechRecognition) {
+    return null;
+  }
+  console.log(propTypes);
 
-    return (
-      <div className="container">
-        <button class="myButton"onClick={resetTranscript}>Reset</button>
-    <div className="contentmic"><span>{transcript}</span></div>      
-      </div>
-    )
-  }
-}
+  return (
+      // <div>
+        <button className={"myButton"} onClick={resetTranscript}>Reset</button>
+        //<span>{transcript}</span>
+      // </div>
+  );
+};
+
+Dictaphone.propTypes = propTypes;
 
-export default SpeechRecognition(Mic)
\ No newline at end of file
+export default SpeechRecognition(Dictaphone);
\ No newline at end of file
Index: WebInterface/public/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n     <!-- Compiled and minified CSS -->\n     <!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"> -->\n        \n    <!-- font awesome-->\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.bundle.min.js\" integrity=\"sha384-1CmrxMRARb6aLqgBO7yyAxTOQE2AKb9GfXnEo760AUcUmFx3ibVJJAzGytlQcNXd\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">\n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- WebInterface/public/index.html	(revision a058a7cda9e48c564081d5231408a92aa7a85473)
+++ WebInterface/public/index.html	(date 1590350464946)
@@ -28,6 +28,8 @@
      <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css"> -->
         
     <!-- font awesome-->
+    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
+    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
     <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.bundle.min.js" integrity="sha384-1CmrxMRARb6aLqgBO7yyAxTOQE2AKb9GfXnEo760AUcUmFx3ibVJJAzGytlQcNXd" crossorigin="anonymous"></script>
     <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
     <title>React App</title>
Index: WebInterface/src/components/Home/mic-fill.svg
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- WebInterface/src/components/Home/mic-fill.svg	(date 1589420882247)
+++ WebInterface/src/components/Home/mic-fill.svg	(date 1589420882247)
@@ -0,0 +1,4 @@
+<svg class="bi bi-mic-fill" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
+  <path d="M5 3a3 3 0 016 0v5a3 3 0 01-6 0V3z"/>
+  <path fill-rule="evenodd" d="M3.5 6.5A.5.5 0 014 7v1a4 4 0 008 0V7a.5.5 0 011 0v1a5 5 0 01-4.5 4.975V15h3a.5.5 0 010 1h-7a.5.5 0 010-1h3v-2.025A5 5 0 013 8V7a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
+</svg>
\ No newline at end of file
